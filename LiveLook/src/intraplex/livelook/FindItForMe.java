/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package intraplex.livelook;

import java.io.File;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;

import static intraplex.livelook.IPLinkNetworkTool.config;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
/**
 *
 * @author jschreiv
 */
public class FindItForMe extends javax.swing.JDialog {

    /**
     * Creates new form FindItForMe
     */
    File[] results;
    long starttime;
    long endtime;
    public FindItForMe(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(dateRangeRadio);
        buttonGroup.add(lastRadioButton);
        
        
        ButtonGroup buttonGroup2 = new ButtonGroup();
        buttonGroup2.add(nameRadioButton);
        buttonGroup2.add(indexRadioButton);
        Calendar c = new GregorianCalendar();
        
        endPanel.setDate(c.getTime());
        c.add(Calendar.DATE, -3);
        startPanel.setDate(c.getTime());
        loadConfiguation();
        toggleOptions();
        toggleOptions2();
        starttime = 0;
        endtime = 0;
        results = null;
    }
    
    public void loadConfiguation()     
    {
        try
        {
            String ipaddress = config.get("Find.IP").toString();
            String index= config.get("Find.Index").toString();
            String name= config.get("Find.Name").toString();
            boolean usename = Boolean.parseBoolean(config.get("Find.NameSearch").toString());
            String days = config.get("Find.Days").toString();
            boolean usedays = Boolean.parseBoolean(config.get("Find.LastDays").toString());
            
            dayField.setText(days);
            indexSpinner.setValue(Integer.parseInt(index));
            streamNameField.setText(name);
            ipAddressField.setText(ipaddress);
            dateRangeRadio.setSelected(!usedays);
            lastRadioButton.setSelected(usedays);
            nameRadioButton.setSelected(usename);
            indexRadioButton.setSelected(!usename);
        }
        catch (Exception e)
        {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ipAddressField = new javax.swing.JTextField();
        streamNameField = new javax.swing.JTextField();
        lastRadioButton = new javax.swing.JRadioButton();
        dateRangeRadio = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        dayField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        nameRadioButton = new javax.swing.JRadioButton();
        indexRadioButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        indexSpinner = new javax.swing.JSpinner();
        startPanel = new intraplex.livelook.JSDatePanel();
        endPanel = new intraplex.livelook.JSDatePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Find Stream");

        jLabel1.setText("Stream Name");

        jLabel2.setText("Ip Address");

        ipAddressField.setText("192.168.1.1");

        streamNameField.setText("RTP Stream 1");

        lastRadioButton.setSelected(true);
        lastRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastRadioButtonActionPerformed(evt);
            }
        });

        dateRangeRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateRangeRadioActionPerformed(evt);
            }
        });

        jLabel3.setText("Last ");

        dayField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dayField.setText("3");

        jLabel4.setText("days");

        jLabel5.setText("Start");

        jLabel6.setText("End");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        nameRadioButton.setSelected(true);
        nameRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameRadioButtonActionPerformed(evt);
            }
        });

        indexRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexRadioButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Stream ID");

        indexSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(ipAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(indexRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(streamNameField)
                                    .addComponent(indexSpinner)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lastRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateRangeRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                        .addComponent(endPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(startPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ipAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(streamNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nameRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(indexSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(indexRadioButton))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastRadioButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(endPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(dateRangeRadio)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lastRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastRadioButtonActionPerformed
        toggleOptions();
    }//GEN-LAST:event_lastRadioButtonActionPerformed

    private void dateRangeRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateRangeRadioActionPerformed
        toggleOptions();
    }//GEN-LAST:event_dateRangeRadioActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
       setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
            loadFiles(nameRadioButton.isSelected(), streamNameField.getText());
    }//GEN-LAST:event_okButtonActionPerformed

    private void loadFiles(boolean useName, String streamName) {                                         
       File f = new File("logs").getAbsoluteFile();
       ArrayList<File> found = new ArrayList<>();
       File[] folders =  f.listFiles();
       starttime = 0;
       endtime = 0;
       long instarttime = 0;
       Set<String> nameList = new HashSet<>();
       int index= ((Integer)indexSpinner.getValue()).intValue();
       
       if (dateRangeRadio.isSelected())
       {
           starttime = startPanel.getDate().getTime();
           endtime = endPanel.getDate().getTime();
           
           Calendar c = new GregorianCalendar();
           c.setTimeInMillis(starttime);
           c.add(Calendar.DATE, -LogMapEntry.daysPerLog);
           instarttime = c.getTime().getTime();
       }
       else
       {
           Calendar c = new GregorianCalendar();
           endtime = c.getTime().getTime();
           int days = 7;
           try
           {
               days = Integer.parseInt(dayField.getText());
           }
           catch (Exception e)
           {
               System.out.println("ERROR");
           }
           c.add(Calendar.DATE, -days);
           starttime = c.getTime().getTime();
           c.add(Calendar.DATE, -1);
           instarttime = c.getTime().getTime();
            
       }
       for (int i = 0; i < folders.length; i++)
       {
           if (folders[i].getName().equals(ipAddressField.getText()))
           {
               if (folders[i].isDirectory())
               {
                    //
                   File[] stream =  folders[i].listFiles();
                    for (int j = 0; j < stream.length; j++)
                    {
                        try
                        {
                            String name = stream[j].getName();
                            name = name.substring(0,name.lastIndexOf(".csv"));
                            if (name.length() - name.lastIndexOf("-") < 5)
                            {
                            name = name.substring(0,name.lastIndexOf("-"));
                            }
                            String date = name.substring(name.lastIndexOf("-")+1);
                            name = name.substring(0,name.lastIndexOf("-"));
                            String indexStr = name.substring(name.lastIndexOf("-")+1);
                            name = name.substring(0,name.lastIndexOf("-"));
                            
                            int si = Integer.parseInt(indexStr);
                            
                            if (useName)
                            {
                                if (!name.equalsIgnoreCase(streamName)) continue;
                            }
                            else
                            {
                                if (index != si) continue;
                            }
                            long l = 0;
                            try {
                                l = LogMapEntry.time.parse(date).getTime();
                            } catch (ParseException ex) {
                                ex.printStackTrace();
                            }
                            if (l > instarttime && l < endtime)
                            {
                                if (!useName)
                                {
                                    if (!name.startsWith("Event_Log_"))
                                    {
                                        nameList.add(name);
                                    }
                                }
                                if (!name.startsWith("Event_Log_"))
                                {
                                    //System.out.println("Adding stream " + name);
                                    found.add(stream[j]);
                                }
                            }
                        }
                        catch (Exception e)
                        {
                            e.printStackTrace();
                        }
                    }
                    break;
               }
           }
       }
       
       if (!useName && nameList.size() > 1)
       {
           //Multiple Streams with the same index;
           
           String s = (String)JOptionPane.showInputDialog(
                    this,
                    "Please select a stream:",
                    "Multiple Streams Found",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    nameList.toArray(),
                    null);
           if (s != null && s.length() > 0)
           {
               loadFiles(true,s);
           }
           
       }
       else
       {
            results = found.toArray(new File[0]);
            config.put("Find.IP",ipAddressField.getText());
            config.put("Find.Index",indexSpinner.getValue()+"");
            config.put("Find.Name",streamNameField.getText());
            config.put("Find.Days",dayField.getText());
            config.put("Find.NameSearch",nameRadioButton.isSelected()+"");
            config.put("Find.LastDays",lastRadioButton.isSelected()+"");
            config.save();
            this.setVisible(false);
       }
    }   
        
    private void nameRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameRadioButtonActionPerformed
        toggleOptions2();
    }//GEN-LAST:event_nameRadioButtonActionPerformed

    private void indexRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexRadioButtonActionPerformed
        toggleOptions2();
    }//GEN-LAST:event_indexRadioButtonActionPerformed

    private void toggleOptions2()
    {
        boolean b = nameRadioButton.isSelected();
        streamNameField.setEnabled(b);
        jLabel1.setEnabled(b);
        indexSpinner.setEnabled(!b);
        jLabel7.setEnabled(!b);
        
    }
    private void toggleOptions()
    {
        boolean b = dateRangeRadio.isSelected();
        dayField.setEnabled(!b);
        jLabel3.setEnabled(!b);
        jLabel4.setEnabled(!b);
        startPanel.setEnabled(b);
        endPanel.setEnabled(b);
        jLabel5.setEnabled(b);
        jLabel6.setEnabled(b);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindItForMe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindItForMe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindItForMe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindItForMe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FindItForMe dialog = new FindItForMe(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public File[] getResults() {
        return results;
    }

    public long getStarttime() {
        return starttime;
    }

    public long getEndtime() {
        return endtime;
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton dateRangeRadio;
    private javax.swing.JTextField dayField;
    private intraplex.livelook.JSDatePanel endPanel;
    private javax.swing.JRadioButton indexRadioButton;
    private javax.swing.JSpinner indexSpinner;
    private javax.swing.JTextField ipAddressField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton lastRadioButton;
    private javax.swing.JRadioButton nameRadioButton;
    private javax.swing.JButton okButton;
    private intraplex.livelook.JSDatePanel startPanel;
    private javax.swing.JTextField streamNameField;
    // End of variables declaration//GEN-END:variables
}
